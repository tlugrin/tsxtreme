% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bounds.R
\name{conditions.bounds}
\alias{conditions.bounds}
\title{Compute bounds for alpha or beta}
\usage{
conditions.bounds(
  fix.par,
  fix.alpha = TRUE,
  data,
  eps = 0.001,
  v = -log(2 * (1 - 0.99999999))
)
}
\arguments{
\item{fix.par}{scalar, either the value of \eqn{\alpha} or that of \eqn{\beta}.}

\item{fix.alpha}{boolean, \code{TRUE} if \link{fix.par} is for \eqn{\alpha}, \code{FALSE}
if \link{fix.par} is for \eqn{\beta}.}

\item{data}{2-column matrix representing the bivariate vector
\eqn{(X,Y)} with \eqn{Y | X>u}.}

\item{eps}{tolerance parameter for finding the boundary value,
defaults to 0.001.}

\item{v}{value of a very high quantile on the Laplace scale.}
}
\value{
A numeric vector of length 2 with the lower and upper bounds for the
given parameter (either alpha or beta).
}
\description{
Called by \code{\link[=ht2fit]{ht2fit()}} to get the support of the (alpha, beta) pair during
initialisation. Exposed to the user for their own curiosity, at their own
risk!
}
\details{
The function computes bounds either for \eqn{\alpha} and requires a (fixed)
value for \eqn{\beta}, or the other way around.
A twin C routine supports the MCMC algorithm when computing
the normalising constants for the truncated normal proposals of \eqn{\alpha}
and \eqn{\beta}.
}
